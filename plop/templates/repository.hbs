import myPrismaClient from "../../../utils/myPrismaClient"
import { {{name}}Input } from "./types/{{name}}Input"

export class {{name}}Repository {
  constructor(private readonly prisma = myPrismaClient) {}

  find{{name}}s(requesterId: string) {
    return this.prisma.{{name}}.findMany({
      where: {
        userId: requesterId,
      },
    })
  }

  create{{name}}(requesterId: string, {{name}}: {{name}}Input) {
    return this.prisma.{{name}}.create({
      data: {
        userId: requesterId,
        ...{{name}},
      },
    })
  }

  isOwner = async (requesterId: string, {{name}}Id: string) => {
    const {{name}} = await this.prisma.{{name}}.findUnique({
      where: {
        id: {{name}}Id,
      },
    })
    return {{name}}?.userId === requesterId
  }

  update{{name}}({{name}}: {{name}}Input) {
    return this.prisma.{{name}}.update({
      where: {
        id: {{name}}.id,
      },
      data: {
        ...{{name}},
      },
    })
  }
}
